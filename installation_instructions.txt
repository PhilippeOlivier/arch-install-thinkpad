Philippe Olivier


Table of Contents
_________________

1 Pre-installation
.. 1.1 Printing this guide from Emacs
.. 1.2 BIOS update
.. 1.3 BIOS settings
.. 1.4 Create the Arch installer USB
.. 1.5 References
2 Main installation
.. 2.1 Boot from the Arch installer USB
.. 2.2 Connect to the internet
.. 2.3 Update the system clock
.. 2.4 Partition the disks
.. 2.5 Format the boot partition
.. 2.6 Encrypt and format the root partition
.. 2.7 Mount the file systems
.. 2.8 Select the mirrors
.. 2.9 Install the base packages and a bit more
.. 2.10 Fstab
.. 2.11 Chroot
.. 2.12 Time zone
.. 2.13 Locale
.. 2.14 Hostname
.. 2.15 Root password
.. 2.16 Configure mkinitcpio and create the initramfs image
.. 2.17 Boot loader and Intel microcode
.. 2.18 Add user
.. 2.19 Reboot
.. 2.20 Internet
..... 2.20.1 Old method (above method fixes DNS problems)
.. 2.21 Dotfiles
.. 2.22 Git
.. 2.23 yay
.. 2.24 Fonts
.. 2.25 Sound
.. 2.26 Video
.. 2.27 Backlight
.. 2.28 Touchpad
.. 2.29 TRIM
.. 2.30 Passwords and encryption
.. 2.31 Terminal/bash
.. 2.32 Man pages
.. 2.33 Color profile
.. 2.34 X
.. 2.35 XDG
.. 2.36 i3
3 Post-installation
.. 3.1 Thunar
.. 3.2 Firefox
.. 3.3 Printing
.. 3.4 Firewall
.. 3.5 Emacs
.. 3.6 Email
.. 3.7 Transmission
.. 3.8 Commercial VPN
.. 3.9 eduroam
.. 3.10 TLP
.. 3.11 Okular
.. 3.12 Security
.. 3.13 CPLEX
.. 3.14 Audio recorder
.. 3.15 KVM
.. 3.16 cmus
.. 3.17 htop
.. 3.18 LibreOffice
.. 3.19 SSH
.. 3.20 LaTeX
.. 3.21 VLC
.. 3.22 Python
.. 3.23 Other packages
..... 3.23.1 Partitioning and file systems
..... 3.23.2 Other utilities
..... 3.23.3 Old applications (don't install by default)
4 Notes
.. 4.1 Changing the MAC address
.. 4.2 pacman
.. 4.3 yay
.. 4.4 Misc.
.. 4.5 Accessing an external encrypted HD
.. 4.6 Chroot into the system
.. 4.7 Downgrading packages





1 Pre-installation
==================

1.1 Printing this guide from Emacs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Generate and export the txt file with "C-c C-e t l" then print it.


1.2 BIOS update
~~~~~~~~~~~~~~~

  Make sure that the latest BIOS update is installed
  ([http://www.lenovo.com]).


1.3 BIOS settings
~~~~~~~~~~~~~~~~~

  Make sure of the following:
  Security > Secure Boot > Secure Boot > Disabled
  Security > Virtualization > Intel (R) Virtualization Technology >
  Enabled


1.4 Create the Arch installer USB
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  [https://wiki.archlinux.org/index.php/USB_flash_installation_media]


1.5 References
~~~~~~~~~~~~~~

  General installation:
  [https://wiki.archlinux.org/index.php/installation_guide]
  T470-specific installation:
  [https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_T470]


2 Main installation
===================

2.1 Boot from the Arch installer USB
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Insert the USB key and press [Enter].


2.2 Connect to the internet
~~~~~~~~~~~~~~~~~~~~~~~~~~~

  An internet connection is required for installation. Plug in an
  ethernet cable and make sure you are connected to the internet:
  > ping google.com


2.3 Update the system clock
~~~~~~~~~~~~~~~~~~~~~~~~~~~

  > timedatectl set-ntp true


2.4 Partition the disks
~~~~~~~~~~~~~~~~~~~~~~~

  > parted --align optimal /dev/nvme0n1
  > mklabel gpt
  > mkpart ESP fat32 1MiB 513MiB
  > set 1 boot on
  > mkpart primary ext4 513MiB 100%
  > quit


2.5 Format the boot partition
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  > mkfs.fat -F32 /dev/nvme0n1p1


2.6 Encrypt and format the root partition
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  > cryptsetup luksFormat --type luks1 -vy /dev/nvme0n1p2
  > cryptsetup open /dev/nvme0n1p2 cryptroot
  > mkfs.ext4 /dev/mapper/cryptroot


2.7 Mount the file systems
~~~~~~~~~~~~~~~~~~~~~~~~~~

  > mount /dev/mapper/cryptroot /mnt
  > mkdir /mnt/boot
  > mount /dev/nvme0n1p1 /mnt/boot


2.8 Select the mirrors
~~~~~~~~~~~~~~~~~~~~~~

  Edit /etc/pacman.d/mirrorlist and put a suitable mirror at the top.


2.9 Install the base packages and a bit more
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  > pacstrap /mnt base base-devel linux linux-firmware linux-lts
    networkmanager

  Linux-LTS is installed as a backup kernel.


2.10 Fstab
~~~~~~~~~~

  > genfstab -U /mnt >> /mnt/etc/fstab

  NOTE: Check the resulting file in /mnt/etc/fstab and make sure it
  covers boot and root.


2.11 Chroot
~~~~~~~~~~~

  > arch-chroot /mnt


2.12 Time zone
~~~~~~~~~~~~~~

  > ln -sf /usr/share/zoneinfo/Canada/Eastern /etc/localtime
  > hwclock --systohc


2.13 Locale
~~~~~~~~~~~

  Uncomment en_CA.UTF-8 UTF-8 in /etc/locale.gen, then
  > locale-gen
  > echo LANG=en_CA.UTF-8 > /etc/locale.conf


2.14 Hostname
~~~~~~~~~~~~~

  > echo pholi-arch > /etc/hostname

  In /etc/hosts, add:
  127.0.0.1 localhost
  ::1 localhost
  127.0.1.1 pholi-arch.localdomain pholi-arch


2.15 Root password
~~~~~~~~~~~~~~~~~~

  > passwd


2.16 Configure mkinitcpio and create the initramfs image
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  In /etc/mkinitcpio.conf, the hooks must be: HOOKS=(base udev
  autodetect keyboard keymap consolefont modconf block encrypt
  filesystems fsck)
  > mkinitcpio -P


2.17 Boot loader and Intel microcode
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Install and configure GRUB:
  > pacman -S grub efibootmgr

  In /etc/default/grub:
  - Uncomment GRUB_ENABLE_CRYPTODISK=y
  - Uncomment GRUB_SAVEDEFAULT="true"
  - Edit GRUB_DEFAULT to GRUB_DEFAULT=y
  - Add the line GRUB_DISABLE_SUBMENU=y
  > grub-install --target=x86_64-efi --efi-directory=/boot
    --bootloader-id=grub
  > grub-mkconfig -o /boot/grub/grub.cfg

  Find the UUID of /dev/nvme0n1p2:
  > blkid

  Edit /etc/default/grub and append the following line to
  GRUB_CMDLINE_LINUX_DEFAULT:
  cryptdevice=UUID=the_uuid_found_earlier:cryptroot:allow-discards
  root=/dev/mapper/cryptroot

  Add Intel microcode:
  > pacman -S intel-ucode
  > grub-mkconfig -o /boot/grub/grub.cfg


2.18 Add user
~~~~~~~~~~~~~

  > useradd -m pholi
  > passwd pholi

  Add pholi to sudoers:
  > pacman -S vim
  > visudo
  1. Go to the line starting with "root".
  2. Press [Y] twice to yank it.
  3. Go to the next line and press [P] to paste it.
  4. Use [X] to delete "root" from that line.
  5. Press [I] to enter insert mode, and replace the deleted "root" by
     "pholi".
  6. Press [Esc], then type ":wq", then press [Enter].


2.19 Reboot
~~~~~~~~~~~

  > exit
  > umount -R /mnt
  > cryptsetup close cryptroot
  > shutdown now

  Remove the Arch installer USB and power the computer back on.


2.20 Internet
~~~~~~~~~~~~~

  Find the wireless interface name (e.g., wlp4s0):
  > ip link

  Enable the wireless interface:
  > sudo ip link set wlp4s0 up

  NetworkManager will be used to manage connections:
  > sudo pacman -S networkmanager
  > sudo systemctl enable NetworkManager.service
  > sudo systemctl start NetworkManager.service
  > sudo systemctl mask systemd-resolved.service
  Remove the /etc/resolv.conf file (if it exists), then:
  > sudo echo "nameserver 8.8.8.8" > /etc/resolv.conf
  In /etc/NetworkManager/NetworkManager.conf, under the [main] section
  (create it if it does not exist) add:
  dns=none


2.20.1 Old method (above method fixes DNS problems)
---------------------------------------------------

  > sudo pacman -S networkmanager
  > sudo systemctl enable NetworkManager.service
  > sudo systemctl start NetworkManager.service
  > sudo systemctl enable systemd-resolved.service
  > sudo systemctl start systemd-resolved.service
  > sudo ln -sf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf

  In the case of DNS problems, it is possible to hardcode the DNS
  server.
  1. Mask the systemd service and remove the symlink:
     > sudo systemctl mask systemd-resolved.service
     > sudo rm /etc/resolv.conf
  2. Manually create /etc/resolv.conf:
     > sudo touch /etc/resolv.conf
     > sudo echo "nameserver 8.8.8.8" > /etc/resolv.conf
  3. Prevent NetworkManager from overwriting /etc/resolv.conf:
     > sudo chattr +i /etc/resolv.conf


2.21 Dotfiles
~~~~~~~~~~~~~

  > sudo pacman -S stow

  To update all bash-related symlinks, for example, do:
  > stow -d ~/dotfiles -t ~ -R bash


2.22 Git
~~~~~~~~

  > sudo pacman -S git

  Make sure that ~/.gitconfig is not present, then:
  > stow -d ~/dotfiles -t ~ -R git


2.23 yay
~~~~~~~~

  Install yay, an AUR helper:
  > cd ~
  > sudo pacman -S --asdeps go
  > git clone [https://aur.archlinux.org/yay.git]
  > cd yay
  > makepkg -si
  > cd ..
  > rm -rf yay

  Make sure that ~/.config/yay is not present, then:
  > stow -d ~/dotfiles -t ~ -R yay

  Note: Always get the non-git version of a package if possible. While
  non-git is not as bleeding edge as git, it is usually more stable.


2.24 Fonts
~~~~~~~~~~

  To cover most characters:
  > sudo pacman -S noto-fonts noto-fonts-cjk noto-fonts-extra ttf-dejavu
    ttf-liberation

  Note: noto-fonts-emoji is not part of the installation, as displaying
  some of them in Emacs may cause a crash.


2.25 Sound
~~~~~~~~~~

  > sudo pacman -S pulseaudio pulseaudio-alsa


2.26 Video
~~~~~~~~~~

  > sudo pacman -S mesa


2.27 Backlight
~~~~~~~~~~~~~~

  > sudo pacman -S light
  > sudo usermod -a -G video pholi


2.28 Touchpad
~~~~~~~~~~~~~

  > sudo pacman -S xf86-input-libinput

  Note: Put the backup file /etc/X11/xorg.conf.d/10-touchpad.conf.


2.29 TRIM
~~~~~~~~~

  > sudo systemctl enable fstrim.timer


2.30 Passwords and encryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  > sudo pacman -S gnupg pass

  Make sure that ~/.gnupg and ~/.password-store are not present, then:
  > stow -d ~/dotfiles -t ~ -R encryption


2.31 Terminal/bash
~~~~~~~~~~~~~~~~~~

  > sudo pacman -S xterm

  Make sure that ~/.profile and any ~/.bash* files are not
  present. Then:
  > stow -d ~/dotfiles -t ~ -R bash


2.32 Man pages
~~~~~~~~~~~~~~

  > sudo pacman -S man-db man-pages


2.33 Color profile
~~~~~~~~~~~~~~~~~~

  Source of the color profile:
  [https://www.notebookcheck.net/Lenovo-ThinkPad-T470-Core-i5-Full-HD-Notebook-Review.198130.0.html]

  > yay -S xcalib

  Note: The color profile is located in ~/scripts/data and the xcalib
  command is executed by ~/.config/i3/config.


2.34 X
~~~~~~

  Basic X packages:
  > sudo pacman -S xorg-server xorg-xinit xorg-xrdb

  Make sure that ~/.xinitrc and ~/.Xresources are not present. Then:
  > stow -d ~/dotfiles -t ~ -R x


2.35 XDG
~~~~~~~~

  > sudo pacman -S xdg-user-dirs

  Make sure that ~/.config/mimeapps.list, ~/.config/user-dirs.dir, and
  ~/.config/user-dirs.locale are not present. Then:
  > stow -d ~/dotfiles -t ~ -R xdg

  Once all backup files and documents are added:
  > xdg-user-dirs-update


2.36 i3
~~~~~~~

  Basic i3 package:
  > sudo pacman -S i3-wm

  Install i3blocks, a status bar:
  > sudo pacman -S i3blocks

  Make sure that ~/.config/i3 and ~/.config/i3blocks are not
  present. Then:
  > stow -d ~/dotfiles -t ~ -R i3

  Allow use of the special keys (volume, brightness, etc):
  > sudo yay -S xbindkeys

  For the lockscreen and suspend:
  > sudo pacman -S i3lock xautolock xdotool xorg-xdpyinfo xorg-xset
    xorg-xwininfo xss-lock

  Note: Put the backup file /etc/systemd/logind.conf for the custom
  screen locker.
  Note: The screen saver script is located in ~/scripts/startup, and is
  executed by ~/.config/i3/config.

  Install rofi, a lightweight menu, and mlocate to find files:
  > sudo pacman -S mlocate rofi

  For the calendar blocklet, install:
  > sudo pacman -S gsimplecal
  Make sure that ~/.config/gsimplecal is not present. Then:
  > stow -d ~/dotfiles -t ~ -R i3
  Note: gsimplecal config is in i3 since it is its only use case.

  For the pacman updates blocklet, install:
  > sudo pacman -S pacman-contrib

  For the battery blocklet, install:
  > sudo pacman -S acpi

  For the WiFi blocklet, install:
  > sudo pacman -S iw

  For the backup blocklet, install:
  > sudo pacman -S dialog

  For the idle blocklet, install:
  > sudo pacman -S xprintidle

  To take screenshots, install (shortcut F9 key):
  > sudo pacman -S lximage-qt
  Make sure that ~/.config/lximage-qt is not present. Then:
  > stow -d ~/dotfiles -t ~ -R lximage-qt

  For an external monitor, install (shortcut F7 key):
  > sudo pacman -S arandr
  Make sure that ~/.screenlayout is not present. Then:
  > stow -d ~/dotfiles -t ~ -R screenlayout

  For colorized output in pacman and yay, uncomment "Color" in
  /etc/pacman.conf.


3 Post-installation
===================

3.1 Thunar
~~~~~~~~~~

  Install additional packages:
  > sudo pacman -S thunar unrar unzip zip
  > sudo pacman -S --asdeps file-roller gvfs lrzip p7zip
    thunar-archive-plugin thunar-media-tags-plugin thunar-volman tumbler

  Make sure that ~/.config/Thunar and
  ~/.config/xfce4/xfconf/xfce-perchannel-xml/thunar.xml are not
  present. Then:
  > stow -d ~/dotfiles -t ~ -R thunar


3.2 Firefox
~~~~~~~~~~~

  > sudo pacman -S firefox

  Run Firefox once to generate a new profile, then exit it. Overwrite
  the files in ~/.mozilla/firefox/[profile] with those backed up.


3.3 Printing
~~~~~~~~~~~~

  For home:
  > yay -S brother-hl3170cdw
  > sudo pacman -S cups cups-pdf
  > sudo systemctl enable org.cups.cupsd.service
  > sudo systemctl start org.cups.cupsd.service
  > sudo gpasswd -a pholi lp
  > sudo gpasswd -a pholi sys
  > sudo gpasswd -a root lp
  > sudo gpasswd -a root sys

  For school (connect with USB, HP LaserJet 1320n):
  > yay -S hplip

  In browser, enter "localhost:631", then add the networked
  printer. Configure it and make it the default printer (Administration
  > Manage Printers > PrinterName > Set As Server Default).


3.4 Firewall
~~~~~~~~~~~~

  > sudo pacman -S ufw gufw
  > sudo systemctl enable ufw

  To access Gufw:
  > sudo gufw


3.5 Emacs
~~~~~~~~~

  > sudo pacman -S emacs

  Make sure that ~/.emacs.d is not present. Then:
  > stow -d ~/dotfiles -t ~ -R emacs


3.6 Email
~~~~~~~~~

  > sudo pacman -S isync msmtp msmtp-mta notmuch s-nail

  Make sure that ~/.mbsyncrc, ~/.msmtp.d, ~/.msmtprc, and
  ~/.notmuch-config are not present, and that ~/.mail is present, then:
  > stow -d ~/dotfiles -t ~ -R mail


3.7 Transmission
~~~~~~~~~~~~~~~~

  > sudo pacman -S transmission-gtk

  Make sure that ~/.config/transmission is not present, then:
  > stow -d ~/dotfiles -t ~ -R transmission


3.8 Commercial VPN
~~~~~~~~~~~~~~~~~~

  The commercial VPN is Mullvad. Install the required packages:
  > sudo pacman -S wireguard-tools wireguard-arch jq openresolv

  Follow the installation instructions:
  [https://mullvad.net/en/help/wireguard-and-mullvad-vpn/]


3.9 eduroam
~~~~~~~~~~~

  Security: WPA & WPA2 Enterprise
  Authentification: Protected EAP (PEAP)
  CA certificate: entrust_g2_ca.cer
  PEAP version: Automatic
  Inner authentication: MSCHAPv2
  Username: [username]@polymtl.ca
  Password: [password]

  Polymtl VPN:
  > sudo pacman -S networkmanager-openconnect

  To connect to the Polymtl VPN, execute the script
  ~/scripts/vpn_polymtl.sh


3.10 TLP
~~~~~~~~

  > sudo pacman -S tlp
  > sudo pacman -S --asdeps acpi_call ethtool smartmontools
    x86_energy_perf_policy
  > sudo systemctl enable tlp.service
  > sudo systemctl mask systemd-rfkill.service
  > sudo systemctl mask systemd-rfkill.socket


3.11 Okular
~~~~~~~~~~~

  > sudo pacman -S okular

  If prompted, choose phonon-qt5-vlc.

  It is not clear where okular stores all its settings. So, manually do:
  Settings > Show Toolbar: OFF
  Settings > Show Navigation Panel: OFF
  Settings > Configure Okular > General Options: Obey DRM limitations:
  OFF
  Settings > Configure Okular > General Options: Show hints and info
  messages: OFF
  Settings > Configure Okular > General Options: Open new files in tabs:
  ON
  Settings > Configure Okular > Annotations: Yellow highlighter, light
  blue highlighter, Pop-up Note, Inline Note


3.12 Security
~~~~~~~~~~~~~

  > sudo pacman -S arch-audit clamav rkhunter


3.13 CPLEX
~~~~~~~~~~

  Download the CPLEX binary from IBM, and make sure that it installs in
  /opt.

  > chmod +x cplex_studio1210.linux-x86-64.bin
  > sudo ./cplex_studio1210.linux-x86-64.bin


3.14 Audio recorder
~~~~~~~~~~~~~~~~~~~

  > yay -S audio-recorder

  Make sure that ~/.config/dconf/user is not present, then:
  > stow -d ~/dotfiles -t ~ -R audiorecorder


3.15 KVM
~~~~~~~~

  Make sure that everything is supported on the host machine:
  [https://wiki.archlinux.org/index.php/KVM]
  Concerning Virtio on the guest machine:
  [https://www.reddit.com/r/archlinux/comments/7t2dvp/virtio_modules_loaded/]

  Install QEMU:
  > sudo pacman -S qemu
  > sudo pacman -S --asdeps qemu-arch-extra qemu-block-gluster
    qemu-block-iscsi qemu-block-rbd

  Creating an image (size of 4G in this case):
  > qemu-img create -f raw my_image_name 4G

  Installing an OS on it (Debian in this case, with 2 cores and 4G RAM):
  > qemu-system-x86_64 -cdrom debian-10.2.0-amd64-netinst.iso -boot
    order=d -drive file=my_image_name,format=raw -smp 2 -m 4G

  Running a VM:
  > qemu-system-x86_64 -boot order=c -drive
    file=my_image_name,format=raw -smp 2 -m 4G


3.16 cmus
~~~~~~~~~

  > sudo pacman -S cmus

  Install all optional dependencies as dependencies.

  Make sure that ~/.config/cmus is not present, then:
  > stow -d ~/dotfiles -t ~ -R cmus


3.17 htop
~~~~~~~~~

  > sudo pacman -S htop

  Make sure that ~/.config/htop is not present, then:
  > stow -d ~/dotfiles -t ~ -R htop


3.18 LibreOffice
~~~~~~~~~~~~~~~~

  > sudo pacman -S libreoffice-still

  Make sure that ~/.config/libreoffice is not present, then:
  > stow -d ~/dotfiles -t ~ -R libreoffice


3.19 SSH
~~~~~~~~

  > sudo pacman -S openssh sshpass

  Make sure that ~/.ssh is not present, then:
  > stow -d ~/dotfiles -t ~ -R ssh


3.20 LaTeX
~~~~~~~~~~

  > sudo pacman -S biber texlive-most
  > yay -S auctex jabref

  rendu ici, quelles configs?
  Remove these?: biber, jabref


3.21 VLC
~~~~~~~~

  > sudo pacman -S vlc

  Make sure that ~/.config/vlc is not present, then:
  > stow -d ~/dotfiles -t ~ -R vlc


3.22 Python
~~~~~~~~~~~

  > sudo pacman -S python-matplotlib python-networkx python-numpy
    python-pandas python-pillow python-pip python-scikit-learn
    python-scipy


3.23 Other packages
~~~~~~~~~~~~~~~~~~~

3.23.1 Partitioning and file systems
------------------------------------

  > sudo pacman -S parted gparted ntfs-3g
  > sudo pacman -S --asdeps dosfstools exfat-utils
  > yay -S hfsprogs


3.23.2 Other utilities
----------------------

  > sudo pacman -S curl dos2unix rsync udisks2 valgrind wget youtube-dl


3.23.3 Old applications (don't install by default)
--------------------------------------------------

  discord
  zoom
  kodi
  inkscape (SVG editor)
  pinta (graphics editor)
  textext (AUR) (LaTeX extension for Inkscape) and its dependencies:
  python2-lxml pstoedit


4 Notes
=======

4.1 Changing the MAC address
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Find the wifi interface (e.g., wlp4s0):
  > ip link

  Install macchanger:
  > sudo pacman -S macchanger

  Set the interface down, change to a random MAC address, and set the
  interface up:
  > sudo ip link set dev wlp4s0 down
  > macchanger -r wlp4s0
  > sudo ip link set dev wlp4s0 up

  To put back the original MAC address:
  > sudo ip link set dev wlp4s0 down
  > macchanger -p wlp4s0
  > sudo ip link set dev wlp4s0 up


4.2 pacman
~~~~~~~~~~

  Installing packages:
  > sudo pacman -S [packages]

  Updating packages:
  > sudo pacman -Syu

  Removing and purging packages:
  > sudo pacman -Rns [packages]

  Displaying a list of unused packages (orphans):
  > pacman -Qtdq

  Removing unused packages (orphans):
  > sudo pacman -Rns $(pacman -Qtdq)

  Pacman report:
  > sudo pacman -S pacutils
  > pacreport

  Cleaning pacman cache:
  > sudo pacman -S pacman-contrib
  > paccache -r


4.3 yay
~~~~~~~

  Updating packages:
  > yay -Syu --devel


4.4 Misc.
~~~~~~~~~

  Cannot write on external hard drive: [https://askubuntu.com/a/172671]


4.5 Accessing an external encrypted HD
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Find the path of the partition (e.g., /dev/sdc1)
  > lsblk

  Open:
  > sudo mount /dev/sdc1 /mnt
  > sudo cryptsetup luksOpen /mnt/backup.luks myluks
  > sudo mkdir /mnt/myluks
  > sudo mount /dev/mapper/myluks /mnt/myluks

  Close:
  > sudo umount /mnt/myluks
  > sudo cryptsetup luksClose /dev/mapper/myluks
  > sudo rmdir /mnt/myluks
  > udisksctl unmount -b /dev/sdc1
  > udisksctl power-off -b /dev/sdc1


4.6 Chroot into the system
~~~~~~~~~~~~~~~~~~~~~~~~~~

  Insert the Arch USB, reboot and press [Enter] to boot with the Arch
  installer.

  Find the paths of the partitions (e.g., /dev/nvme0n1p1 for boot and
  /dev/nvme0n1p2 for root):
  > lsblk

  > cryptsetup open --type luks1 /dev/nvme0n1p2 cryptroot
  > mount -t ext4 /dev/mapper/cryptroot /mnt
  > mount -t vfat /dev/nvme0n1p1 /mnt/boot
  > arch-chroot /mnt

  To leave:
  > exit
  > umount -R /mnt/boot
  > umount -R /mnt
  > cryptsetup close cryptroot


4.7 Downgrading packages
~~~~~~~~~~~~~~~~~~~~~~~~

  [https://wiki.archlinux.org/index.php/downgrading_packages]

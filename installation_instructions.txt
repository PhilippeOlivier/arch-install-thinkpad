Philippe Olivier


Table of Contents
_________________

1 Pre-installation
.. 1.1 Printing this guide from Emacs
.. 1.2 BIOS update
.. 1.3 BIOS settings
.. 1.4 Create the Arch installer USB
.. 1.5 References
2 Main installation
.. 2.1 Boot from the Arch installer USB
.. 2.2 Connect to the internet
.. 2.3 Update the system clock
.. 2.4 Partition the disks
.. 2.5 Format the boot partition
.. 2.6 Encrypt and format the root partition
.. 2.7 Mount the file systems
.. 2.8 Select the mirrors
.. 2.9 Install the base packages
.. 2.10 Fstab
.. 2.11 Chroot
.. 2.12 Time zone
.. 2.13 Locale
.. 2.14 Hostname
.. 2.15 Root password
.. 2.16 Configure mkinitcpio and create the initramfs image
.. 2.17 Boot loader and Intel microcode
.. 2.18 Add user
.. 2.19 Reboot
.. 2.20 Internet
.. 2.21 yay
.. 2.22 Fonts
.. 2.23 Sound
.. 2.24 Video
.. 2.25 Backlight
.. 2.26 Touchpad
.. 2.27 TRIM
.. 2.28 Passwords and encryption
.. 2.29 Terminal
.. 2.30 Man pages
.. 2.31 Color profile
.. 2.32 i3
3 Post-installation
.. 3.1 Thunar
.. 3.2 Firefox
.. 3.3 Printing
.. 3.4 Firewall
.. 3.5 Emacs
.. 3.6 Email
.. 3.7 Transmission
.. 3.8 Commercial VPN
.. 3.9 eduroam
.. 3.10 TLP
.. 3.11 Okular (PDF reader and image viewer)
.. 3.12 Security
.. 3.13 CPLEX
.. 3.14 KVM
.. 3.15 Other packages
..... 3.15.1 Partitioning
..... 3.15.2 File systems
..... 3.15.3 Network
..... 3.15.4 LaTeX
..... 3.15.5 Coding
..... 3.15.6 Python
..... 3.15.7 Applications
..... 3.15.8 Other utilities
..... 3.15.9 Old applications (don't install by default)
4 Notes
.. 4.1 Changing the MAC address
.. 4.2 pacman
.. 4.3 yay
.. 4.4 Misc.
.. 4.5 Accessing an external encrypted HD
.. 4.6 How to chroot into the system
.. 4.7 Maybe todo later





1 Pre-installation
==================

1.1 Printing this guide from Emacs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Generate and export the txt file with "C-c C-e t l" then print it.


1.2 BIOS update
~~~~~~~~~~~~~~~

  Make sure that the latest BIOS update is installed
  ([http://www.lenovo.com]).


1.3 BIOS settings
~~~~~~~~~~~~~~~~~

  Make sure of the following:
  Security > Secure Boot > Secure Boot > Disabled
  Security > Virtualization > Intel (R) Virtualization Technology >
  Enabled


1.4 Create the Arch installer USB
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  [https://wiki.archlinux.org/index.php/USB_flash_installation_media]


1.5 References
~~~~~~~~~~~~~~

  General installation:
  [https://wiki.archlinux.org/index.php/installation_guide]
  T470-specific installation:
  [https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_T470]


2 Main installation
===================

2.1 Boot from the Arch installer USB
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Insert the USB key and press [Enter].


2.2 Connect to the internet
~~~~~~~~~~~~~~~~~~~~~~~~~~~

  An internet connection is required for installation. Plug in an
  ethernet cable and make sure you are connected to the internet:
  > ping google.com


2.3 Update the system clock
~~~~~~~~~~~~~~~~~~~~~~~~~~~

  > timedatectl set-ntp true


2.4 Partition the disks
~~~~~~~~~~~~~~~~~~~~~~~

  > parted --align optimal /dev/nvme0n1
  > mklabel gpt
  > mkpart ESP fat32 1MiB 513MiB
  > set 1 boot on
  > mkpart primary ext4 513MiB 100%
  > quit


2.5 Format the boot partition
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  > mkfs.fat -F32 /dev/nvme0n1p1


2.6 Encrypt and format the root partition
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  > cryptsetup luksFormat --type luks1 -vy /dev/nvme0n1p2
  > cryptsetup open /dev/nvme0n1p2 cryptroot
  > mkfs.ext4 /dev/mapper/cryptroot


2.7 Mount the file systems
~~~~~~~~~~~~~~~~~~~~~~~~~~

  > mount /dev/mapper/cryptroot /mnt
  > mkdir /mnt/boot
  > mount /dev/nvme0n1p1 /mnt/boot


2.8 Select the mirrors
~~~~~~~~~~~~~~~~~~~~~~

  Edit /etc/pacman.d/mirrorlist and put a suitable mirror at the top.


2.9 Install the base packages
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  > pacstrap /mnt base base-devel linux linux-firmware networkmanager


2.10 Fstab
~~~~~~~~~~

  > genfstab -U /mnt >> /mnt/etc/fstab

  NOTE: Check the resulting file in /mnt/etc/fstab and make sure it
  covers boot and root.


2.11 Chroot
~~~~~~~~~~~

  > arch-chroot /mnt


2.12 Time zone
~~~~~~~~~~~~~~

  > ln -sf /usr/share/zoneinfo/Canada/Eastern /etc/localtime
  > hwclock --systohc


2.13 Locale
~~~~~~~~~~~

  Uncomment en_CA.UTF-8 UTF-8 in /etc/locale.gen, then
  > locale-gen
  > echo LANG=en_CA.UTF-8 > /etc/locale.conf


2.14 Hostname
~~~~~~~~~~~~~

  > echo pholi-arch > /etc/hostname

  In /etc/hosts, add:
  127.0.0.1 localhost
  ::1 localhost
  127.0.1.1 pholi-arch.localdomain pholi-arch


2.15 Root password
~~~~~~~~~~~~~~~~~~

  > passwd


2.16 Configure mkinitcpio and create the initramfs image
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  In /etc/mkinitcpio.conf, the hooks must be: HOOKS=(base udev
  autodetect keyboard keymap consolefont modconf block encrypt
  filesystems fsck)
  > mkinitcpio -p linux


2.17 Boot loader and Intel microcode
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Install and configure GRUB:
  > pacman -S grub efibootmgr

  In /etc/default/grub uncomment "GRUB_ENABLE_CRYPTODISK=y".
  > grub-install --target=x86_64-efi --efi-directory=/boot
    --bootloader-id=grub
  > grub-mkconfig -o /boot/grub/grub.cfg

  Find the UUID of /dev/nvme0n1p2:
  > blkid

  Edit /etc/default/grub and append the following line to
  GRUB_CMDLINE_LINUX_DEFAULT:
  cryptdevice=UUID=the_uuid_found_earlier:cryptroot:allow-discards
  root=/dev/mapper/cryptroot

  Add Intel microcode:
  > pacman -S intel-ucode
  > grub-mkconfig -o /boot/grub/grub.cfg


2.18 Add user
~~~~~~~~~~~~~

  > useradd -m pholi
  > passwd pholi

  Add pholi to sudoers:
  > pacman -S vim
  > visudo
  1. Go to the line starting with "root".
  2. Press [Y] twice to yank it.
  3. Go to the next line and press [P] to paste it.
  4. Use [X] to delete "root" from that line.
  5. Press [I] to enter insert mode, and replace the deleted "root" by
     "pholi".
  6. Press [Esc], then type ":wq", then press [Enter].


2.19 Reboot
~~~~~~~~~~~

  > exit
  > umount -R /mnt
  > cryptsetup close cryptroot
  > shutdown now

  Remove the Arch installer USB and power the computer back on.


2.20 Internet
~~~~~~~~~~~~~

  Find the wireless interface name (e.g., wlp4s0):
  > ip link

  Enable the wireless interface:
  > sudo ip link set wlp4s0 up

  NetworkManager will be used to manage connections:
  > sudo systemctl enable NetworkManager.service
  > sudo systemctl start NetworkManager.service
  > sudo pacman -S networkmanager
  > sudo systemctl enable systemd-resolved.service
  > sudo systemctl start systemd-resolved.service
  > sudo ln -sf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf

  In the case of DNS problems, it is possible to hardcode the DNS
  server.
  1. Mask the systemd service and remove the symlink:
     > sudo systemctl mask systemd-resolved.service
     > sudo rm /etc/resolv.conf
  2. Manually create /etc/resolv.conf:
     > sudo touch /etc/resolv.conf
     > sudo echo "nameserver 8.8.8.8" > /etc/resolv.conf
  3. Prevent NetworkManager from overwriting /etc/resolv.conf:
     > sudo chattr +i /etc/resolv.conf


2.21 yay
~~~~~~~~

  Install yay, an AUR helper:
  > cd ~
  > sudo pacman -S git
  > sudo pacman -S --asdeps go
  > git clone [https://aur.archlinux.org/yay.git]
  > cd yay
  > makepkg -si
  > cd ..
  > rm -rf yay

  NOTE: Always get the non-git version of a package if possible. While
  non-git is not as bleeding edge as git, it is usually more stable.


2.22 Fonts
~~~~~~~~~~

  To cover most characters:
  > sudo pacman -S ttf-dejavu ttf-liberation noto-fonts noto-fonts-cjk
    noto-fonts-extra

  Note: noto-fonts-emoji is not part of the installation, as displaying
  some of them in Emacs may cause a crash.


2.23 Sound
~~~~~~~~~~

  > sudo pacman -S pulseaudio pulseaudio-alsa


2.24 Video
~~~~~~~~~~

  > sudo pacman -S mesa


2.25 Backlight
~~~~~~~~~~~~~~

  > sudo pacman -S light
  > sudo usermod -a -G video pholi


2.26 Touchpad
~~~~~~~~~~~~~

  > sudo pacman -S xf86-input-libinput

  Put the backup file /etc/X11/xorg.conf.d/10-touchpad.conf.


2.27 TRIM
~~~~~~~~~

  > sudo systemctl enable fstrim.timer


2.28 Passwords and encryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  > sudo pacman -S pass

  Put the backup files ~/.gnupg and ~/.password-store.


2.29 Terminal
~~~~~~~~~~~~~

  > sudo pacman -S xterm

  Put the backup files ~/.Xresources and ~/.bashrc for the custom
  settings.


2.30 Man pages
~~~~~~~~~~~~~~

  > sudo pacman -S man-db man-pages


2.31 Color profile
~~~~~~~~~~~~~~~~~~

  Source of the color profile:
  [https://www.notebookcheck.net/Lenovo-ThinkPad-T470-Core-i5-Full-HD-Notebook-Review.198130.0.html]

  > yay -S xcalib

  Put the backup file ~/.N140HCA_EAB_01.icm.


2.32 i3
~~~~~~~

  Basic X and i3 packages:
  > sudo pacman -S xorg-xinit xorg-server i3-wm xbindkeys

  Put the backup files ~/.xinitrc to start i3 with the command "startx",
  and ~/.config/i3/config to load all custom settings.

  For the lockscreen and suspend:
  > sudo pacman -S xorg-xset xautolock xss-lock i3lock xdotool
    xorg-xwininfo xorg-xdpyinfo

  Put the backup files ~/.screensaver.sh (and chmod +x it) and
  /etc/systemd/logind.conf for the custom screen locker.

  Install rofi, a lightweight menu:
  > sudo pacman -S rofi mlocate

  Install i3blocks, a status bar, and pango for markup/colors:
  > sudo pacman -S i3blocks

  Put the backup file ~/.config/i3blocks/config for the i3blocks config,
  as well as ~/.config/i3blocks/*.sh (chmod +x them) for the blocklets.

  For the calendar blocklet of i3blocks, put the backup file
  ~/.config/gsimplecal/config, and install gsimplecal:
  > sudo pacman -S gsimplecal

  For the pacman updates blocklet, install:
  > sudo pacman -S pacman-contrib

  For the battery blocklet, install:
  > sudo pacman -S acpi

  For the WiFi blocklet, install:
  > sudo pacman -S iw

  To take screenshots, install (shortcut F9 key):
  > sudo pacman -S lximage-qt

  For an external monitor, install (shortcut F7 key):
  > sudo pacman -S arandr


3 Post-installation
===================

3.1 Thunar
~~~~~~~~~~

  Install additional packages:
  > sudo pacman -S thunar unrar unzip zip
  > sudo pacman -S --asdeps file-roller gvfs lrzip p7zip
    thunar-archive-plugin thunar-media-tags-plugin thunar-volman tumbler

  Settings:
  View > View as Detailed List
  Left pane: View > Shortcuts (File System, pholi, Trash)
  Format: Today at...


3.2 Firefox
~~~~~~~~~~~

  > sudo pacman -S firefox

  Run Firefox once to generate a new profile, then exit it. Overwrite
  the files in ~/.mozilla/firefox/[profile] with those backed up.


3.3 Printing
~~~~~~~~~~~~

  For home:
  > yay -S brother-hl3170cdw
  > sudo pacman -S cups cups-pdf
  > sudo systemctl enable org.cups.cupsd.service
  > sudo systemctl start org.cups.cupsd.service
  > sudo gpasswd -a pholi lp
  > sudo gpasswd -a pholi sys
  > sudo gpasswd -a root lp
  > sudo gpasswd -a root sys

  For school (connect with USB, HP LaserJet 1320n):
  > yay -S hplip

  In browser, enter "localhost:631", then add the networked
  printer. Configure it and make it the default printer (Administration
  > Manage Printers > PrinterName > Set As Server Default).


3.4 Firewall
~~~~~~~~~~~~

  > sudo pacman -S ufw gufw
  > sudo systemctl enable ufw

  To access Gufw:
  > sudo gufw


3.5 Emacs
~~~~~~~~~

  > sudo pacman -S emacs

  Put the directory ~/.emacs.d.


3.6 Email
~~~~~~~~~

  > sudo pacman -S notmuch msmtp msmtp-mta s-nail isync

  Put the backup files ~/.mail, ~/.mbsyncrc, ~/.msmtp.d, ~/.msmtprc, and
  ~/.notmuch-config.


3.7 Transmission
~~~~~~~~~~~~~~~~

  > sudo pacman -S transmission-gtk

  Settings:
  - Speed: limit upload
  - Downloading: specify directories


3.8 Commercial VPN
~~~~~~~~~~~~~~~~~~

  The commercial VPN is Mullvad. Install the required packages:
  > sudo pacman -S wireguard-tools wireguard-arch jq openresolv

  Follow the installation instructions:
  [https://mullvad.net/en/help/wireguard-and-mullvad-vpn/]


3.9 eduroam
~~~~~~~~~~~

  Security: WPA & WPA2 Enterprise
  Authentification: Protected EAP (PEAP)
  CA certificate: entrust_g2_ca.cer
  PEAP version: Automatic
  Inner authentication: MSCHAPv2
  Username: [username]@polymtl.ca
  Password: [password]

  Polymtl VPN:
  > sudo pacman -S networkmanager-openconnect

  To connect to the Polymtl VPN, execute the script
  ~/Documents/code/scripts/vpn_polymtl.sh


3.10 TLP
~~~~~~~~

  > sudo pacman -S tlp
  > sudo pacman -S --asdeps acpi_call ethtool smartmontools
    x86_energy_perf_policy
  > sudo systemctl enable tlp.service
  > sudo systemctl mask systemd-rfkill.service
  > sudo systemctl mask systemd-rfkill.socket


3.11 Okular (PDF reader and image viewer)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  > sudo pacman -S okular

  If prompted, choose phonon-qt5-vlc.

  Settings > Show Toolbar: OFF
  Settings > Show Navigation Panel: OFF
  Settings > Configure Okular > General Options: Obey DRM limitations:
  OFF
  Settings > Configure Okular > General Options: Show hints and info
  messages: OFF
  Settings > Configure Okular > General Options: Open new files in tabs:
  ON
  Settings > Configure Okular > Annotations: Yellow highlighter, light
  blue highlighter, Pop-up Note, Inline Note


3.12 Security
~~~~~~~~~~~~~

  > sudo pacman -S arch-audit clamav rkhunter


3.13 CPLEX
~~~~~~~~~~

  Download the CPLEX binary from IBM, and make sure that it installs in
  /opt.

  > chmod +x cplex_studio128.linux-x86-64.bin
  > sudo ./cplex_studio128.linux-x86-64.bin


3.14 KVM
~~~~~~~~

  Make sure that everything is supported on the host machine:
  [https://wiki.archlinux.org/index.php/KVM]
  Concerning Virtio on the guest machine:
  [https://www.reddit.com/r/archlinux/comments/7t2dvp/virtio_modules_loaded/]

  Install QEMU:
  > sudo pacman -S qemu
  > sudo pacman -S --asdeps qemu-arch-extra qemu-block-gluster
    qemu-block-iscsi qemu-block-rbd

  Creating an image (size of 4G in this case):
  > qemu-img create -f raw my_image_name 4G

  Installing an OS on it (Debian in this case, with 2 cores and 4G RAM):
  > qemu-system-x86_64 -cdrom debian-10.2.0-amd64-netinst.iso -boot
    order=d -drive file=my_image_name,format=raw -smp 2 -m 4G

  Running a VM:
  > qemu-system-x86_64 -boot order=c -drive
    file=my_image_name,format=raw -smp 2 -m 4G


3.15 Other packages
~~~~~~~~~~~~~~~~~~~

3.15.1 Partitioning
-------------------

  > sudo pacman -S parted gparted
  > sudo pacman -S --asdeps dosfstools exfat-utils


3.15.2 File systems
-------------------

  > sudo pacman -S ntfs-3g
  > yay -S hfsprogs


3.15.3 Network
--------------

  > sudo pacman -S curl openssh sshpass wget


3.15.4 LaTeX
------------

  > sudo pacman -S biber texlive-most
  > yay -S auctex-git jabref


3.15.5 Coding
-------------

  > sudo pacman -S valgrind


3.15.6 Python
-------------

  > sudo pacman -S python-matplotlib python-networkx python-numpy
    python-pip python-scipy


3.15.7 Applications
-------------------

  > sudo pacman -S discord htop libreoffice-still neofetch vlc
    youtube-dl


3.15.8 Other utilities
----------------------

  > sudo pacman -S dos2unix rsync udisks2


3.15.9 Old applications (don't install by default)
--------------------------------------------------

  kodi
  inkscape (SVG editor)
  pinta (graphics editor)
  qpdf (PDF manipulation)
  textext (AUR) (LaTeX extension for Inkscape) and its dependencies:
  python2-lxml pstoedit


4 Notes
=======

4.1 Changing the MAC address
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Find the wifi interface (e.g., wlp4s0):
  > ip link

  Install macchanger:
  > sudo pacman -S macchanger

  Set the interface down, change to a random MAC address, and set the
  interface up:
  > sudo ip link set dev wlp4s0 down
  > macchanger -r wlp4s0
  > sudo ip link set dev wlp4s0 up

  To put back the original MAC address:
  > sudo ip link set dev wlp4s0 down
  > macchanger -p wlp4s0
  > sudo ip link set dev wlp4s0 up


4.2 pacman
~~~~~~~~~~

  Installing packages:
  > sudo pacman -S [packages]

  Updating packages:
  > sudo pacman -Syu

  Removing and purging packages:
  > sudo pacman -Rns [packages]

  Displaying a list of unused packages (orphans):
  > pacman -Qtdq

  Removing unused packages (orphans):
  > sudo pacman -Rns $(pacman -Qtdq)

  Cleaning pacman cache:
  > sudo pacman -S pacman-contrib
  > paccache -r


4.3 yay
~~~~~~~

  Updating packages:
  > yay -Syu --devel


4.4 Misc.
~~~~~~~~~

  Cannot write on external hard drive: [https://askubuntu.com/a/172671]


4.5 Accessing an external encrypted HD
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Find the path of the partition (e.g., /dev/sdc1)
  > lsblk

  Open:
  > sudo mount /dev/sdc1 /mnt
  > sudo cryptsetup luksOpen /mnt/backup.luks myluks
  > sudo mkdir /mnt/myluks
  > sudo mount /dev/mapper/myluks /mnt/myluks

  Close:
  > sudo umount /mnt/myluks
  > sudo cryptsetup luksClose /dev/mapper/myluks
  > sudo rmdir /mnt/myluks
  > udisksctl unmount -b /dev/sdc1
  > udisksctl power-off -b /dev/sdc1


4.6 How to chroot into the system
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Insert the Arch USB, reboot and press [Enter] to boot with the Arch
  installer.

  Find the paths of the partitions (e.g., /dev/nvme0n1p1 for boot and
  /dev/nvme0n1p2 for root):
  > lsblk

  > cryptsetup open --type luks1 /dev/nvme0n1p2 cryptroot
  > mount -t ext4 /dev/mapper/cryptroot /mnt
  > mount -t vfat /dev/nvme0n1p1 /mnt/boot
  > arch-chroot /mnt

  To leave:
  > exit
  > umount -R /mnt/boot
  > umount -R /mnt
  > cryptsetup close cryptroot


4.7 Maybe todo later
~~~~~~~~~~~~~~~~~~~~

  - Have a Facebook alert for new messages:
    [https://fbchat.readthedocs.io/en/stable/]
  - Power saving:
    [https://wiki.archlinux.org/index.php/CPU_frequency_scaling]
  - Power saving:
    [https://wiki.archlinux.org/index.php/Undervolting_CPU]
